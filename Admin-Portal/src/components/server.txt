const express = require('express');
const mongoose = require('mongoose');
const bodyParser = require('body-parser');
const cors = require('cors');

const app = express();
const port = 5000;

app.use(cors());
app.use(bodyParser.json());
//Locally MondoDB Connection
// mongoose.connect('mongodb://localhost:27017/blog', {
mongoose.connect('mongodb+srv://admin:admin1234@mentorbot.6ggoacm.mongodb.net/blog', {
    useNewUrlParser: true,
    useUnifiedTopology: true,
});

const db = mongoose.connection;
db.on('error', console.error.bind(console, 'connection error:'));
db.once('open', () => {
    console.log('Connected to MongoDB');
});

// Define a schema
const blogSchema = new mongoose.Schema({
    dateNumber: Number,
    dateWord: String,
    postTitle: String,
    author: String,
    category: String,
    comments: String,
    postExcerpt: String
});

// Define a model
const Blog = mongoose.model('Blog', blogSchema);

// Define routes
app.post('/add-blog', async (req, res) => {
    const blogData = req.body;

    const newBlog = new Blog(blogData);

    try {
        await newBlog.save();
        res.status(200).send('Blog saved successfully');
    } catch (err) {
        res.status(500).send('Error saving blog');
    }
});

app.get('/blogs', async (req, res) => {
    try {
        const blogs = await Blog.find();
        res.status(200).json(blogs);
    } catch (err) {
        res.status(500).send('Error fetching blogs');
    }
});

app.listen(port, () => {
    console.log(`Server running at http://localhost:${port}`);
});
